<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BurgerAPI</name>
    </assembly>
    <members>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurgers">
            <summary>
            Get the list of all Burgers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurger(System.Int32)">
            <summary>
            Get individual Burger.
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurgerInPlace(System.Int32)">
            <summary>
            Get list of Burgers in a Place.
            </summary>
            <param name="placeId"> The Id of the Place.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.CreateBurger(BurgerAPI.Models.Dtos.BurgerCreateDto)">
            <summary>
            Create Burger
            </summary>
            <param name="BurgerDto"> Burger to be added.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.UpdateBurger(System.Int32,BurgerAPI.Models.Dtos.BurgerUpdateDto)">
            <summary>
            Update a Burger
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <param name="BurgerDto"> The details of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.DeleteBurger(System.Int32)">
            <summary>
            Delete a Burger.
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurgerScore(System.Int32)">
            <summary>
            Get the total score of a Burger.
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurgerTasteScore(System.Int32)">
            <summary>
            Get the taste score of a Burger.
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurgerTextureScore(System.Int32)">
            <summary>
            Get the texture score of a Burger.
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.BurgersController.GetBurgerVisualScore(System.Int32)">
            <summary>
            Get the visual score of a Burger.
            </summary>
            <param name="BurgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.GetPlaces">
            <summary>
            Get list of burger places.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.GetPlace(System.Int32)">
            <summary>
            Get an individual burger place.
            </summary>
            <param name="PlaceId"> The Id of the burger place.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.GetPlacesByCity(System.String)">
            <summary>
            Get list of burger places in a city.
            </summary>
            <param name="City"> The name of the city.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.CreatePlace(BurgerAPI.Models.Dtos.PlaceCreateDto,Microsoft.AspNetCore.Mvc.ApiVersion)">
            <summary>
            Create burger place
            </summary>
            <param name="PlaceDto"> Burger place to be added.</param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.UpdatePlace(System.Int32,BurgerAPI.Models.Dtos.PlaceUpdateDto)">
            <summary>
            Update a burger place
            </summary>
            <param name="PlaceId"> The Id of the burger place.</param>
            <param name="PlaceDto"> The details of the burger place.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.DeletePlace(System.Int32)">
            <summary>
            Delete a burger place.
            </summary>
            <param name="PlaceId"> The Id of the burger place.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.PlacesController.GetAllCities">
            <summary>
            Get all available cities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.GetReviews">
            <summary>
            Get the list of all Reviews.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.GetReview(System.Int32)">
            <summary>
            Get individual Review.
            </summary>
            <param name="ReviewId"> The Id of the Review.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.GetReviewFromPlace(System.Int32)">
            <summary>
            Get list of Reviews from a specific Place.
            </summary>
            <param name="placeId"> The Id of the Place.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.GetReviewFromBurger(System.Int32)">
            <summary>
            Get list of Reviews about a specific Burger.
            </summary>
            <param name="burgerId"> The Id of the Burger.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.GetReviewFromUser(System.Int32)">
            <summary>
            Get list of Reviews from a specific User.
            </summary>
            <param name="userId"> The Id of the User.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.CreateReview(BurgerAPI.Models.Dtos.ReviewCreateDto)">
            <summary>
            Create Review
            </summary>
            <param name="ReviewDto"> Review to be added.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.UpdateReview(System.Int32,BurgerAPI.Models.Dtos.ReviewUpdateDto)">
            <summary>
            Update a Review
            </summary>
            <param name="ReviewId"> The Id of the Review.</param>
            <param name="ReviewDto"> The details of the Review.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.DeleteReview(System.Int32)">
            <summary>
            Delete a Review.
            </summary>
            <param name="ReviewId"> The Id of the Review.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.AddImageToReview(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Adds an image to a review.
            </summary>
            <param name="ReviewId"> The Id of the Review.</param>
            <param name="file"> The image to be uploaded</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.ReviewsController.DeleteImageFromReview(System.Int32)">
            <summary>
            Deletes image from a review.
            </summary>
            <param name="ReviewId"> The Id of the Review.</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.UsersController.Authenticate(BurgerAPI.Models.Authentication)">
            <summary>
            Authenticating User.
            </summary>
            <param name="model">User to authenticate</param>
            <returns></returns>
        </member>
        <member name="M:BurgerAPI.Controllers.UsersController.Register(BurgerAPI.Models.Authentication)">
            <summary>
            Register new user
            </summary>
            <param name="model">Username and password to register</param>
            <returns></returns>
        </member>
    </members>
</doc>
